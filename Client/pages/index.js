import React from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import HeaderBar from "../components/HeaderBar";
import HeaderLogo from "../components/HeaderLogo";
import Menu from "../components/Menu";
import Cart from "../components/Cart";
import {
  Grid,
  Typography,
  Stepper,
  Step,
  StepLabel,
  StepContent,
  Button,
  Paper,
  Divider,
  Fade,
} from "@material-ui/core";
import io from "socket.io-client";
import { v4 as uuidv4 } from "uuid";

const myId = uuidv4;
const cart = Cart.cart;

const socket = io("http://localhost:8080", {
  transports: ["websocket", "polling", "flashsocket"],
});
socket.on("connect", () =>
  console.log("[IO] Connect => A new connection has been established")
);

export default function Home() {
  const putOnCart = () => {
    socket.on("menu.order", cart);
    socket.emit("menu.order", {
      id: myId,
      cart,
    });
    return () => socket.off("menu.order", cart);
  };

  const getSteps = () => {
    return ["Cardápio", "Pagamento", "Acompanhe o pedido"];
  };

  const checked = React.useState(true);

  const getStepContent = (step) => {
    switch (step) {
      case 0:
        return (
          <Fade in={checked} timeout={4000}>
            <Menu />
          </Fade>
        );
      case 1:
        return (
          <Fade in={checked} timeout={4000}>
            <Cart />
          </Fade>
        );
      case 2:
        return "ORDER";
      default:
        return "Unknown step";
    }
  };

  const [activeStep, setActiveStep] = React.useState(0);
  const steps = getSteps();

  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1);
  };

  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1);
  };

  const handleReset = () => {
    setActiveStep(0);
  };

  const submitHandler = async (event) => {
    event.preventDefault();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Bee Veggie - Cozinha Vegetariana</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <br />
      <Divider />
      <br />

      <HeaderBar />

      <Grid container justifyContent="center">
        <Grid item>
          <HeaderLogo />
        </Grid>
      </Grid>

      <Divider />

      <main>
        <form onSubmit={submitHandler}>
          <div>
            <Stepper activeStep={activeStep} orientation="vertical">
              {steps.map((label, index) => (
                <Step key={label}>
                  <StepLabel>{label}</StepLabel>
                  <StepContent>
                    <Typography>{getStepContent(index)}</Typography>
                    <div>
                      <div>
                        <Button
                          disabled={activeStep === 0}
                          onClick={handleBack}
                        >
                          Voltar
                        </Button>
                        <Button
                          variant="outlined"
                          onClick={handleNext}
                          type={
                            activeStep === steps.length - 1 ? "submit" : null
                          }
                        >
                          {activeStep === steps.length - 1
                            ? "Entregue"
                            : "Próximo"}
                        </Button>
                      </div>
                    </div>
                  </StepContent>
                </Step>
              ))}
            </Stepper>

            {activeStep === steps.length && (
              <Paper square elevation={0}>
                <Typography>Bom apetite e volte sempre!</Typography>
                <Button onClick={handleReset}>Pedir novamente</Button>
              </Paper>
            )}
          </div>
        </form>
      </main>

      <footer className={styles.footer}>
        <Grid container justifyContent="center">
          <Grid item>
            <span>© Daniela Farias</span>
          </Grid>
        </Grid>
      </footer>
    </div>
  );
}
